/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∫—Ä—ã—Ç–∏—è –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫
 * –í—ã–ø–æ–ª–Ω–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ http://localhost:5174/
 */

async function testBlockedCardsVisibility() {
    console.log('üß™ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç —Å–∫—Ä—ã—Ç–∏—è –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫...');

    const API_BASE_URL = 'http://localhost:3000';

    try {
        // 1. –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–∞—Ä—Ç–æ—á–∫–∏ —á–µ—Ä–µ–∑ –ø—É–±–ª–∏—á–Ω—ã–π API
        console.log('üìã –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–∞—Ä—Ç–æ—á–∫–∏ —á–µ—Ä–µ–∑ –ø—É–±–ª–∏—á–Ω—ã–π API...');
        const response = await fetch(`${API_BASE_URL}/cards`);
        const allCards = await response.json();

        console.log(`üìä –í—Å–µ–≥–æ –∫–∞—Ä—Ç–æ—á–µ–∫ –≤ —Å–∏—Å—Ç–µ–º–µ: ${allCards.length}`);

        // 2. –°—á–∏—Ç–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏
        const activeCards = allCards.filter(card => !card.isBlocked);
        const blockedCards = allCards.filter(card => card.isBlocked);

        console.log(`‚úÖ –ê–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫: ${activeCards.length}`);
        console.log(`üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫: ${blockedCards.length}`);

        // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏
        if (blockedCards.length > 0) {
            console.log('üéØ –ù–∞–π–¥–µ–Ω—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏:');
            blockedCards.forEach(card => {
                console.log(`   - "${card.title}" (ID: ${card._id})`);
            });

            console.log('‚ú® –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç–∞–µ—Ç: –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ!');
        } else {
            console.log('‚ÑπÔ∏è  –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ –Ω–µ—Ç. –í—Å–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è.');
        }

        // 4. –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º, —Å–∫–æ–ª—å–∫–æ –∫–∞—Ä—Ç–æ—á–µ–∫ –¥–æ–ª–∂–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è
        console.log(`üé® –ù–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –¥–æ–ª–∂–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è: ${activeCards.length} –∫–∞—Ä—Ç–æ—á–µ–∫`);

        return {
            total: allCards.length,
            active: activeCards.length,
            blocked: blockedCards.length,
            success: true
        };

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
        return { success: false, error: error.message };
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∫–∞—Ä—Ç–æ—á–∫–∏ (—Ç—Ä–µ–±—É–µ—Ç –∞–¥–º–∏–Ω—Å–∫–∏–π —Ç–æ–∫–µ–Ω)
async function demonstrateCardBlocking(cardId, adminToken) {
    console.log('üîí –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –∫–∞—Ä—Ç–æ—á–∫–∏...');

    const API_BASE_URL = 'http://localhost:3000';

    try {
        // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–∞—Ä—Ç–æ—á–∫—É
        const response = await fetch(`${API_BASE_URL}/cards/${cardId}`, {
            method: 'PATCH',
            headers: {
                'Content-Type': 'application/json',
                'x-auth-token': adminToken
            },
            body: JSON.stringify({ isBlocked: true })
        });

        if (response.ok) {
            console.log(`‚úÖ –ö–∞—Ä—Ç–æ—á–∫–∞ ${cardId} —É—Å–ø–µ—à–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞!`);
            console.log('üîÑ –û–±–Ω–æ–≤–∏—Ç–µ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è.');
            return true;
        } else {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –∫–∞—Ä—Ç–æ—á–∫–∏:', response.statusText);
            return false;
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error);
        return false;
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∫–∞—Ä—Ç–æ—á–∫–∏
async function unblockCard(cardId, adminToken) {
    console.log('üîì –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –∫–∞—Ä—Ç–æ—á–∫—É...');

    const API_BASE_URL = 'http://localhost:3000';

    try {
        const response = await fetch(`${API_BASE_URL}/cards/${cardId}`, {
            method: 'PATCH',
            headers: {
                'Content-Type': 'application/json',
                'x-auth-token': adminToken
            },
            body: JSON.stringify({ isBlocked: false })
        });

        if (response.ok) {
            console.log(`‚úÖ –ö–∞—Ä—Ç–æ—á–∫–∞ ${cardId} —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞!`);
            console.log('üîÑ –û–±–Ω–æ–≤–∏—Ç–µ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è.');
            return true;
        } else {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –∫–∞—Ä—Ç–æ—á–∫–∏:', response.statusText);
            return false;
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error);
        return false;
    }
}

console.log('üöÄ –¢–µ—Å—Ç–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!');
console.log('üìù –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:');
console.log('   testBlockedCardsVisibility() - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–µ–∫');
console.log('   demonstrateCardBlocking(cardId, adminToken) - –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É');
console.log('   unblockCard(cardId, adminToken) - —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É');
console.log('');
console.log('üî• –ó–∞–ø—É—Å—Ç–∏—Ç–µ testBlockedCardsVisibility() –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è!');
